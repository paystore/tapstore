{"version":3,"sources":["routes/Router.js","App.js","reportWebVitals.js","layouts/loader/Loader.js","index.js"],"names":["FullLayout","lazy","Home","Documentacao","Api","Demo","ReleaseNotes","ThemeRoutes","path","element","children","to","exact","App","routing","useRoutes","Themeroutes","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Loader","color","ReactDOM","render","fallback","document","getElementById"],"mappings":"uMAIMA,EAAaC,gBAAK,kBAAM,4BAAkC,IAI1DC,EAAOD,gBAAK,kBAAM,4BAA0B,IAC5CE,EAAeF,gBAAK,kBAAM,4BAA+B,IACzDG,EAAMH,gBAAK,kBAAM,kDAAsB,IACvCI,EAAOJ,gBAAK,kBAAM,4BAAuB,IACzCK,EAAeL,gBAAK,kBAAM,4BAA+B,IAmBhDM,EAfK,CAClB,CACEC,KAAM,IACNC,QAAS,cAACT,EAAU,IACpBU,SAAU,CACR,CAAEF,KAAM,IAAKC,QAAS,cAAC,IAAQ,CAACE,GAAG,WACnC,CAAEH,KAAM,QAASI,OAAO,EAAMH,QAAS,cAACP,EAAI,KAC5C,CAAEM,KAAM,gBAAiBI,OAAO,EAAMH,QAAS,cAACN,EAAY,KAC5D,CAAEK,KAAM,OAAQI,OAAO,EAAMH,QAAS,cAACL,EAAG,KAC1C,CAAEI,KAAM,QAASI,OAAO,EAAMH,QAAS,cAACJ,EAAI,KAC5C,CAAEG,KAAM,WAAYI,OAAO,EAAMH,QAAS,cAACH,EAAY,QCjB9CO,EANH,WACV,IAAMC,EAAUC,YAAUC,GAE1B,OAAO,qBAAKC,UAAU,OAAM,SAAEH,GAChC,ECKeI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,E,wBCCeQ,EAPA,WAAH,OACV,qBAAKV,UAAU,mBAAkB,SAC/B,qBAAKA,UAAU,UAAS,SACtB,cAAC,IAAO,CAACW,MAAM,eAEb,ECDRC,IAASC,OACP,cAAC,WAAQ,CAACC,SAAU,cAAC,EAAM,IAAI,SAC7B,cAAC,IAAU,UACT,cAAC,EAAG,QAIRC,SAASC,eAAe,SAM1Bf,G","file":"static/js/main.d75e6802.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n/****Layouts*****/\r\nconst FullLayout = lazy(() => import(\"../layouts/FullLayout.js\"));\r\n\r\n/***** Pages ****/\r\n\r\nconst Home = lazy(() => import(\"../pages/Home.js\"));\r\nconst Documentacao = lazy(() => import(\"../pages/Documentacao\"));\r\nconst Api = lazy(() => import(\"../pages/Api\"));\r\nconst Demo = lazy(() => import(\"../pages/Demo\"));\r\nconst ReleaseNotes = lazy(() => import(\"../pages/ReleaseNotes\"));\r\n\r\n/*****Routes******/\r\n\r\nconst ThemeRoutes = [\r\n  {\r\n    path: \"/\",\r\n    element: <FullLayout />,\r\n    children: [\r\n      { path: \"/\", element: <Navigate to=\"/home\" /> },\r\n      { path: \"/home\", exact: true, element: <Home /> },\r\n      { path: \"/documentacao\", exact: true, element: <Documentacao /> },\r\n      { path: \"/api\", exact: true, element: <Api /> },\r\n      { path: \"/demo\", exact: true, element: <Demo /> },\r\n      { path: \"/release\", exact: true, element: <ReleaseNotes /> },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default ThemeRoutes;\r\n","import { useRoutes } from \"react-router-dom\";\nimport Themeroutes from \"./routes/Router\";\n\nconst App = () => {\n  const routing = useRoutes(Themeroutes);\n\n  return <div className=\"dark\">{routing}</div>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport \"./loader.scss\";\r\nimport { Spinner } from \"reactstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"fallback-spinner\">\r\n    <div className=\"loading\">\r\n      <Spinner color=\"primary\" />\r\n    </div>\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/scss/style.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport Loader from \"./layouts/loader/Loader\";\n\nReactDOM.render(\n  <Suspense fallback={<Loader />}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Suspense>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}